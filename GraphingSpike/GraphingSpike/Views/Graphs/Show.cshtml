@using GraphingSpike.Controllers
@model GraphsController.GraphsViewModel
           
@{
    ViewBag.Title = "Graphs";
}

 @* This is for visual studio intellisense *@
 @if (false) { 
    <script src="~/Scripts/jquery-1.5.1-vsdoc.js" type="text/javascript"></script>
 }


@section Head{
    <link href="@Url.Content("~/Content/jquery.contextMenu.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery.contextMenu.js")" type="text/javascript"></script>
    <style type="text/css">
          .TheGraph
          {
              float:left;
              margin : 10px;
              display: block;
          }
          .TheTable
          {
              float:left;
              margin:10px;
              padding-top:20px;
              display: block;
          }            
          .TheTable span
          {
              border : 1px solid Gray;
              text-align:center;
              width: 100px;
              display: inline-block;
          }          
          .Data-Row
          {
              margin: 0px; 
              position: relative;
          } 
          .clear
          {
              clear:both;
          }          
          .Grey-Out
          {
              background-color:Gray;
          }
    </style>
    
    <script type="text/javascript">
        var commandMap = {};

        $(document).ready(function () {

            commandMap["highlight"] = function (elementId) {
                var id = $(elementId).attr('id');
                var index = id.split("-")[1];
                $('#Row-Number-' + index).effect("highlight", { color: "#FF6655" }, 4000);
            };

            commandMap["markoutlier"] = function (elementId) {
                var id = $(elementId).attr('id');
                var index = id.split("-")[1];
                var twoSpanTags = $('#Row-Number-' + index).children("span");
                $.ajax({
                    url: '/Graphs/Remove/' + twoSpanTags[0].innerHTML,
                    context: document.body,
                    success: function () {
                        refreshGraph();
                    }
                });
            };

            commandMap["data"] = function (elementId) {
                var id = $(elementId).attr('id');
                var index = id.split("-")[1];
                var twoSpanTags = $('#Row-Number-' + index).children("span");
                alert('Data : X = ' + twoSpanTags[0].innerHTML + ' Y = ' + twoSpanTags[1].innerHTML + '\n\n');
            };

            attachMenu();
        });
        
        function refreshGraph() {
            $.ajax({
                url: '/Graphs/ChartTable',
                context: document.body,
                success: function (returnedHtml) {
                    $("#Chart-Table").html(returnedHtml);
                    attachMenu();
                }
            });
        }

        function toggleLine(line) {
            $.ajax({
                url: '/Graphs/ToggleSeries/' + line,
                context: document.body,
                success: function () {
                    refreshGraph();
                }
            });
        }
        
        function attachMenu()
        {
            $(".InteractiveArea").contextMenu({
                menu: 'ContextMenu'
            },
			    function (action, id, pos) {
			        commandMap[action](id);
			        /* alert(
			        'Action: ' + action + '\n\n' +
			        'Element ID: ' + $(id).attr('id') + '\n\n' +
			        'X: ' + pos.x + '  Y: ' + pos.y + ' (relative to element)\n\n' +
			        'X: ' + pos.docX + '  Y: ' + pos.docY + ' (relative to document)'
			        ); */
			    });
        }
			
	</script>
}

<h2>@ViewBag.Message</h2>
<div>    

    <div id="Chart-Table">
        @Html.Partial("ChartTable", Model)
    </div>

    
    <br />LineBestInClass : @Html.CheckBox("LineBestInClass", true, new {onclick="toggleLine('LineBestInClass');"})
    <br />LineIndustryAvg : @Html.CheckBox("LineIndustryAvg ", true, new { onclick = "toggleLine('LineIndustryAvg');"})
    <br />LineTopQuartile : @Html.CheckBox("LineTopQuartile", true, new { onclick = "toggleLine('LineTopQuartile');"})
    <br />
    <ul id="ContextMenu" class="contextMenu">
		<li class="highlight"><a href="#highlight">Highlight</a></li>
		<li class="markoutlier"><a href="#markoutlier">Mark Outlier</a></li>
		<li class="data"><a href="#data">Data</a></li>
	</ul>
</div>


